[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "ai-context-manager"
version = "0.1.0"
description = "Manage and export file selections as AI context"
requires-python = ">=3.12"
license = "MIT"
dependencies = [
    "typer[all]>=0.9.0",
    "rich>=13.7.0",
    "pyyaml>=6.0",
    "python-dotenv>=1.0.0",
    "pathspec>=0.12.0", # For gitignore-style patterns
    "pytest>=8.4.1",
    "pytest-cov>=6.2.1",
]

[project.scripts]
aicontext = "ai_context_manager.cli:app"

[project.optional-dependencies]
dev = [
    "pytest>=8.0.0",
    "pytest-cov>=4.1.0",
    "pytest-xdist>=3.5.0",
    "pytest-mock>=3.12.0",
    "black>=24.0.0",
    "mypy>=1.8.0",
    "ruff>=0.3.0",
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=ai_context_manager",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
    "--cov-fail-under=85",
    "-v"
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["ai_context_manager"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]
